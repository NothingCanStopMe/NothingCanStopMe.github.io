<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如果给鱼添加简单阴影]]></title>
    <url>%2F2019%2F06%2F21%2F%E5%A6%82%E6%9E%9C%E7%BB%99%E9%B1%BC%E6%B7%BB%E5%8A%A0%E7%AE%80%E5%8D%95%E9%98%B4%E5%BD%B1%2F</url>
    <content type="text"><![CDATA[捕鱼项目里, 竟然应策划需求要添加一个简单的阴影因为我们项目里面鱼是2d的, 理论上在鱼的底下添加一个同外形的黑色的鱼就可以达到这个效果基于此思路, 在鱼的文件内添加一个 schduler 每0.2秒执行一遍渲染给过下面是代码: 1234567891011121314151617181920function FishBase:initShadowUpdate() self.shadowSp = cc.Sprite:create() self.shadowSp:initWithSpriteFrameName(&quot;fishFrameName.png&quot;) -- 自行添加自己鱼的frameName self.shadowSp:setBlendFunc(cc.blendFunc(GL_ZERO, GL_ONE_MINUS_SRC_ALPHA)) -- 这个地方自行百度 self.shadowSp:setOpacity(150) self.shadowSp:setPosition(cc.p(-10, 0)) self.shadowSp:addTo(self, -1) self.shadowSp:scheduleUpdateWithPriorityLua(handler(self, self.shadowUpdate), 0.1)endfunction FishBase:shadowUpdate(dt) self.shadowSp:initWithSpriteFrame(self.aniSp:getSpriteFrame()) -- self.aniSp 为鱼的sprite self.shadowSp:setOpacity(150) --这里必须先设置不透明度, 不然setBlendFunc之后不再渲染透明度 self.shadowSp:setBlendFunc(cc.blendFunc(GL_ZERO, GL_ONE_MINUS_SRC_ALPHA)) -- 这里的计算是假设光源在右边, 且是方向光 local x = math.sin(math.rad(self:getRotation() - 90)) * 15 local y = - math.cos(math.rad(self:getRotation() - 90)) * 15 self.shadowSp:setPosition(cc.p(x, y))end 用setBlendFunc比直接用opengl更简单一些, 不需要自己写opengl文件, 直接混色就能达到要求了]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[捕鱼项目减少cpu占用的优化方案总结]]></title>
    <url>%2F2019%2F06%2F21%2F%E6%8D%95%E9%B1%BC%E9%A1%B9%E7%9B%AE%E5%87%8F%E5%B0%91cpu%E5%8D%A0%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[最近在做捕鱼项目的时候, 总为房间内cpu占用率过高而烦恼, cpu占用率甚至达到了60%, 着手优化这部分内容重中之重为了优化代码 减少cpu占用率 采用以下流程检查代码那部分导致cpu占用率增加 在 config.lua 文件内将 CC_SHOW_FPS 设置为 true , 显示整个游戏的GL verts(当前页面顶点数), GL call(每帧调用OpenGl次数), FPS(帧率) 1.1 MAC模拟器上GL verts 8000+, GL call 200+, FPS 58+ 1.2 理论上FPS 58+不影响游戏的流畅度, 但是GL verts 和 GL call 太高了, 需要优化 经检查代码发现: 2.1 为了实现鱼的可点击, 每条鱼身上都添加了一张白图作为点击对象 2.2 为了实现光影效果, 每条鱼身上添加了一个 scheduler 每0.2秒渲染一个阴影到鱼的底下, (如果给鱼添加简单阴影) 分析上面两个方案的弊端 3.1 添加了白图作为点击对象, GL verts 增加了2000+ 3.2 添加了光影效果, GL verts 增加了2000+ GL call 增加了100+ 对这两方案进行优化 4.1 由于鱼的碰撞采用的是cocos2dx 的物理世界(physicsWorld)的oncontactBegin方法, 那鱼的点击, 可以采用以下物理世界里面的getShape方法实现, 具体代码: 12345678function xxx:onTouchEnded(touch, event) local physicsWorld = cc.Director:getInstance():getRunningScene():getPhysicsWorld() local shape = physicsWorld:getShape(touch:getLocation()) if shape then local node = shape:getBody():getNode() -- 这里获取到了当前点击的Node, 自行判断是否为鱼即可 endend getShape方法优先获取 最上层的shape(为了碰撞设置的多边形) 无需自行判断那条鱼在最上面. 如果需要知道当前点击位置附近有多少条鱼, 建议采用getShapes(touch:getLocation())方法 4.2 光影效果直接删掉或者给个按钮用户选择是否出现即可(浪费了我研究这么久) 做完以上优化之后发现 Gl verts 还要3000+, 检查代码发现, 捕鱼的房间直接add到大厅上面的, 还需要将大厅setVisible(false)掉 因为cocos2dx很多layer(layout)叠在一起时, 只要可见都会进行渲染, 凭空浪费cpu 结论: 做cpu优化时, 打开fps显示, 检查代码的哪一部分会导致 GL verts, GL call 升高, 并找替代方法, 可以达成目标]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo怎么添加本地搜索功能]]></title>
    <url>%2F2019%2F06%2F20%2Fhexo%E6%80%8E%E4%B9%88%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E7%9A%84%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[在blog主文件夹内将searchdb插件安装进来 npm install hexo-generator-searchdb –save mac下如果出现gym错误 access deny错误的话, 在blog主文件夹内运行 sudo chown -R $USER ./ 目的是将blog的归属改为当前用户, 当前用户拥有归属权的时候就不会出现权限问题 在站点配置文件_config.yml文件下添加 search: path: search.xml field: post format: html limit: 10000 目的是在public文件夹内生成search.xml文件, 将所有发不过的文件形成链接放入search.xml内, 这样子就有了搜索的能力 在主题配置文件_config.yml文件内找到 local_search: enable: false trigger: auto top_n_per_article: 1 将false改为true, 如果本来就是true就做理会, 如果没有上面这段代码就添加上去 由于页面配置原因, 就不把注释的部分贴进来了, 请自行脑补 在blog主文件内执行一次 hexo g 这样子你的博客就拥有了本地搜索功能了]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于hexo怎么建立分配和标签的笔记]]></title>
    <url>%2F2019%2F06%2F20%2F%E5%85%B3%E4%BA%8Ehexo%E6%80%8E%E4%B9%88%E5%BB%BA%E7%AB%8B%E5%88%86%E9%85%8D%E5%92%8C%E6%A0%87%E7%AD%BE%E7%9A%84%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[站点配置文件中将language改为zh-Hans(因为我的主题里面的中文样式是这个) 主题配置文件中将language改为zh-Hans 主题配置文件中在menu: 选项内把home(主页) tags(标签) categories(分配) archives(归档) 前面的#去掉 在blog主文件下 hexo new page tags (这样就新建了标签分页) 在blog主文件下 hexo new page categories (这样子就新建了分类分页) 这样子你就有了各个分页的功能 目前来说主页和各个分页的内容都存放在_posts文件夹内]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[主页]]></title>
    <url>%2F2019%2F06%2F20%2F%E4%B8%BB%E9%A1%B5%2F</url>
    <content type="text"><![CDATA[欢迎来到龙中之马的博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[第一篇笔记]]></title>
    <url>%2F2019%2F06%2F20%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[这是我的第一篇博客文章,虽然弄的很垃圾,但是也勉强把私人博客弄起来了.期待以后的写作.]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇随感]]></title>
    <url>%2F2019%2F06%2F20%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E9%9A%8F%E6%84%9F%2F</url>
    <content type="text"><![CDATA[用这个博客工具还是挺有意思的, 虽然现在才会弄一点点, 连引用别人的文章之类的都没学会但是起码弄起来了, 挺感慨工作四年了都没想起弄个博客来记录日常工作的点点滴滴, 没进行自己的技术积累, 有一种荒废青春的感觉. 也是几天前才想起有弄个博客记录的必要, 因为儿子已经7个月, 生活的重担让我有了危机感,不能像刚毕业的那段日子一样每天得过且过, 需要拥有一点自己的优势, 得以在未来的工作中不被淘汰, 给我自己的这个小家更多的支持. 在这里也感谢我的老婆给与我奋发向前的动力. 在以后的日子里, 这个博客会随着我的成长慢慢完善. 慢慢打造自己的小优势. ^_^]]></content>
      <tags>
        <tag>随感</tag>
      </tags>
  </entry>
</search>
